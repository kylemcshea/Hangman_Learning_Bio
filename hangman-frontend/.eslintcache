[{"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/index.js":"1","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/serviceWorker.js":"2","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/App.js":"3","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/Header.js":"4","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/GameExplained.js":"5","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/Hangman.js":"6","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/ImageCard.js":"7","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/Words.js":"8","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/hook/useWindowPosition.js":"9","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/WinLossModal.js":"10","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/static/imageData.js":"11","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/static/alphabet.js":"12"},{"size":503,"mtime":1600896929438,"results":"13","hashOfConfig":"14"},{"size":5098,"mtime":1606952334498,"results":"15","hashOfConfig":"14"},{"size":924,"mtime":1607046072901,"results":"16","hashOfConfig":"14"},{"size":2137,"mtime":1606958985681,"results":"17","hashOfConfig":"14"},{"size":1213,"mtime":1607046072901,"results":"18","hashOfConfig":"14"},{"size":3039,"mtime":1607048187176,"results":"19","hashOfConfig":"14"},{"size":1725,"mtime":1606958312163,"results":"20","hashOfConfig":"14"},{"size":6154,"mtime":1607046072901,"results":"21","hashOfConfig":"14"},{"size":630,"mtime":1606952334498,"results":"22","hashOfConfig":"14"},{"size":1554,"mtime":1607048024092,"results":"23","hashOfConfig":"14"},{"size":418,"mtime":1607046072901,"results":"24","hashOfConfig":"14"},{"size":229,"mtime":1606959245665,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ax49ct",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/index.js",[],["54","55"],"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/serviceWorker.js",[],"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/App.js",[],"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/Header.js",["56"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, IconButton, Toolbar, Collapse } from \"@material-ui/core\";\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Link as Scroll } from \"react-scroll\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n  },\n  appbar: {\n    background: \"none\",\n    fontFamily: \"Nunito\",\n  },\n  appbarTitle: {\n    color: \"#fff\",\n    flexGrow: \"1\",\n  },\n  appbarWrapper: {\n    width: \"80%\",\n    margin: \"0 auto\",\n  },\n  colorTitle: {\n    color: \"#5AFF3D\",\n  },\n  container: {\n    textAlign: \"center\",\n  },\n  icon: {\n    color: \"#fff\",\n    fontSize: \"2rem\",\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: \"3rem\",\n    fontFamily: \"Nunito\",\n  },\n  dropDown: {\n    color: \"#fff\",\n    fontSize: \"3rem\",\n  },\n}));\nexport default function Header() {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false);\n  useEffect(() => {\n    setChecked(true);\n  });\n  return (\n    <div className={classes.root} id=\"header\">\n      <AppBar className={classes.appbar} elevation={0}>\n        <Toolbar className={classes.appbarWrapper}>\n          <h1 className={classes.appbarTitle}>\n            Hangman <span className={classes.colorTitle}>Learning.</span>\n          </h1>\n          <IconButton>\n            <SortIcon className={classes.icon} />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Collapse\n        in={checked}\n        {...(checked ? { timeout: 1000 } : {})}\n        collapsedHeight={50}\n      >\n        <div className={classes.container}>\n          <h1 className={classes.title}>\n            Welcome to <br />\n            Hangman<span className={classes.colorTitle}>Learning!</span>\n          </h1>\n          <Scroll to=\"game-explained\" smooth={true}>\n            <IconButton>\n              <ExpandMoreIcon className={classes.dropDown} />\n            </IconButton>\n          </Scroll>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/GameExplained.js",[],"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/Hangman.js",["57","58","59"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport alphabet from \"../static/alphabet\";\nimport \"../style/hangman.css\";\nimport { randomWord } from \"./Words\";\nimport WinLossModal from \"./WinLossModal\";\n\nclass Hangman extends React.Component {\n  static defaultProps = {\n    maxWrong: 6,\n  };\n\n  constructor(props) {\n    super(props);\n    let info = randomWord();\n    this.state = {\n      stage: 0,\n      guessed: new Set([]),\n      answer: info.Vocabulary.toUpperCase(),\n      definition: info.Definition,\n    };\n  }\n  handleClick = (e) => {\n    let letter = e;\n    console.log(letter);\n    this.setState((st) => {\n      return {\n        guessed: st.guessed.add(letter),\n        stage: st.stage + (st.answer.includes(letter) ? 0 : 1),\n      };\n    });\n  };\n  guessedWord() {\n    return this.state.answer\n      .split(\"\")\n      .map((char) => (this.state.guessed.has(char) ? char : \" _ \"));\n  }\n  generateButtons() {\n    return (\n      <div className=\"buttonContainer\">\n        <div className=\"alphaBox1\">\n          {alphabet.slice(0, 13).map((char, key) => (\n            <Button\n              key={key}\n              onClick={() => this.handleClick(char.toUpperCase())}\n              disabled={this.state.guessed.has(char.toUpperCase())}\n              className=\"buttonGroup\"\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              {char.toUpperCase()}\n            </Button>\n          ))}\n          <br />\n        </div>\n        <div className=\"alphaBox2\">\n          {alphabet.slice(13, 26).map((char, key) => (\n            <Button\n              key={key}\n              onClick={() => this.handleClick(char.toUpperCase())}\n              disabled={this.state.guessed.has(char.toUpperCase())}\n              className=\"buttonGroup\"\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              {char.toUpperCase()}\n            </Button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  render() {\n    //Buttons for game\n    let gameKeys = this.generateButtons();\n    const gameOver = this.state.stage >= this.props.maxWrong;\n    //String version of the display answer so we can compare to real answer\n    let stringAns = this.guessedWord()\n      .join()\n      .replace(\",\", \"\")\n      .replace(/,/g, \"\");\n    const gameWin = stringAns == this.state.answer;\n    return (\n      <div>\n        <img\n          className=\"image-box\"\n          src={\n            process.env.PUBLIC_URL +\n            `/assets/hangman_step_${this.state.stage}.png`\n          }\n        ></img>\n        <div className=\"hangman-info\">\n          <p>{this.state.definition}</p>\n          <p>{!gameOver ? this.guessedWord() : this.state.answer}</p>\n          {gameWin ? (\n            <WinLossModal victory={true} />\n          ) : gameOver ? (\n            <WinLossModal victory={false} />\n          ) : (\n            <p></p>\n          )}\n        </div>\n        {gameKeys}\n      </div>\n    );\n  }\n}\nexport default Hangman;\n","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/ImageCard.js",["60","61","62"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Collapse } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    backgroundColor: \"rgba(0,0,0,0.2)\",\n    color: \"#fff\",\n    margin: \"20px\",\n  },\n  media: {\n    height: 250,\n  },\n  title: {\n    fontFamily: \"Nunito\",\n    fontWeight: \"bold\",\n    fontSize: \"2rem\",\n  },\n  desc: {\n    fontFamily: \"Nunito\",\n    fontSize: \"1.1rem\",\n    color: \"#ddd\",\n  },\n});\n\nexport default function ImageCard({ photo, checked }) {\n  const classes = useStyles();\n\n  return (\n    <Collapse\n      in={checked}\n      {...(checked ? { timeout: 1000 } : {})}\n      collapsedHeight={50}\n    >\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.media}\n          image={photo.imageUrl}\n          title={photo.title}\n        />\n        <CardContent>\n          <Typography\n            className={classes.title}\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n          >\n            {photo.title}\n          </Typography>\n          <Typography\n            className={classes.desc}\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            {photo.desc}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n}\n","/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/Words.js",[],"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/hook/useWindowPosition.js",[],"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/components/WinLossModal.js",[],"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/static/imageData.js",[],"/home/vpilly/Desktop/React/Hangman_Learning_Bio/hangman-frontend/src/static/alphabet.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":49,"column":3,"nodeType":"69","endLine":49,"endColumn":12,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":10,"nodeType":"69","messageId":"73","endLine":2,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":83,"column":31,"nodeType":"76","messageId":"77","endLine":83,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":86,"column":9,"nodeType":"80","endLine":92,"endColumn":10},{"ruleId":"71","severity":1,"message":"81","line":5,"column":8,"nodeType":"69","messageId":"73","endLine":5,"endColumn":22},{"ruleId":"71","severity":1,"message":"82","line":6,"column":8,"nodeType":"69","messageId":"73","endLine":6,"endColumn":19},{"ruleId":"71","severity":1,"message":"83","line":9,"column":8,"nodeType":"69","messageId":"73","endLine":9,"endColumn":14},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setChecked'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["86"],"no-unused-vars","'makeStyles' is defined but never used.","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Add dependencies array: []",{"range":"89","text":"90"},[1136,1136],", []"]