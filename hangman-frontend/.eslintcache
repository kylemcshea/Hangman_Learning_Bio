[{"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\index.js":"1","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\App.js":"2","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\serviceWorker.js":"3","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\Header.js":"4","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\GameExplained.js":"5","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\Hangman.js":"6","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\ImageCard.js":"7","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\Words.js":"8","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\WinLossModal.js":"9","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\static\\alphabet.js":"10","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\static\\imageData.js":"11","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\hook\\useWindowPosition.js":"12"},{"size":520,"mtime":1606942591128,"results":"13","hashOfConfig":"14"},{"size":956,"mtime":1606961809484,"results":"15","hashOfConfig":"14"},{"size":5239,"mtime":1606942971406,"results":"16","hashOfConfig":"14"},{"size":2220,"mtime":1606951927978,"results":"17","hashOfConfig":"14"},{"size":1255,"mtime":1606960002812,"results":"18","hashOfConfig":"14"},{"size":5308,"mtime":1607112844441,"results":"19","hashOfConfig":"14"},{"size":1795,"mtime":1606950786657,"results":"20","hashOfConfig":"14"},{"size":6407,"mtime":1607111914673,"results":"21","hashOfConfig":"14"},{"size":1905,"mtime":1607113734985,"results":"22","hashOfConfig":"14"},{"size":258,"mtime":1606958661776,"results":"23","hashOfConfig":"14"},{"size":433,"mtime":1607014983858,"results":"24","hashOfConfig":"14"},{"size":649,"mtime":1606952026352,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"79ox11",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\index.js",[],["54","55"],"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\App.js",[],"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\serviceWorker.js",[],"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\Header.js",["56"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, IconButton, Toolbar, Collapse } from \"@material-ui/core\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link as Scroll } from \"react-scroll\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  appbar: {\r\n    background: \"none\",\r\n    fontFamily: \"Nunito\",\r\n  },\r\n  appbarTitle: {\r\n    color: \"#fff\",\r\n    flexGrow: \"1\",\r\n  },\r\n  appbarWrapper: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  colorTitle: {\r\n    color: \"#5AFF3D\",\r\n  },\r\n  container: {\r\n    textAlign: \"center\",\r\n  },\r\n  icon: {\r\n    color: \"#fff\",\r\n    fontSize: \"2rem\",\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n    fontSize: \"3rem\",\r\n    fontFamily: \"Nunito\",\r\n  },\r\n  dropDown: {\r\n    color: \"#fff\",\r\n    fontSize: \"3rem\",\r\n  },\r\n}));\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  useEffect(() => {\r\n    setChecked(true);\r\n  });\r\n  return (\r\n    <div className={classes.root} id=\"header\">\r\n      <AppBar className={classes.appbar} elevation={0}>\r\n        <Toolbar className={classes.appbarWrapper}>\r\n          <h1 className={classes.appbarTitle}>\r\n            Hangman <span className={classes.colorTitle}>Learning.</span>\r\n          </h1>\r\n          <IconButton>\r\n            <SortIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Collapse\r\n        in={checked}\r\n        {...(checked ? { timeout: 1000 } : {})}\r\n        collapsedHeight={50}\r\n      >\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>\r\n            Welcome to <br />\r\n            Hangman<span className={classes.colorTitle}>Learning!</span>\r\n          </h1>\r\n          <Scroll to=\"game-explained\" smooth={true}>\r\n            <IconButton>\r\n              <ExpandMoreIcon className={classes.dropDown} />\r\n            </IconButton>\r\n          </Scroll>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\GameExplained.js",[],"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\Hangman.js",["57","58","59","60"],"import React from \"react\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\n// import Radio from \"@material-ui/core/Radio\";\r\nimport alphabet from \"../static/alphabet\";\r\nimport \"../style/hangman.css\";\r\nimport { randomWord } from \"./Words\";\r\nimport WinLossModal from \"./WinLossModal\";\r\n\r\nclass Hangman extends React.Component {\r\n  static defaultProps = {\r\n    maxWrong: 12,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    let diff = event.target.value;\r\n    this.setState({\r\n      difficulty: event.target.value,\r\n    });\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let info = randomWord();\r\n    this.state = {\r\n      stage: 0,\r\n      guessed: new Set([]),\r\n      answer: info.Vocabulary.toUpperCase(),\r\n      definition: info.Definition,\r\n      difficulty: \"Medium\",\r\n    };\r\n  }\r\n  handleClick = (e) => {\r\n    let letter = e;\r\n    console.log(letter);\r\n    this.setState((st) => {\r\n      return {\r\n        guessed: st.guessed.add(letter),\r\n        stage:\r\n          st.stage +\r\n          (st.answer.includes(letter)\r\n            ? 0\r\n            : st.difficulty == \"Easy\"\r\n            ? 1\r\n            : st.difficulty == \"Medium\"\r\n            ? 2\r\n            : st.difficulty == \"Hard\"\r\n            ? 3\r\n            : \"\"),\r\n      };\r\n    });\r\n  };\r\n  guessedWord() {\r\n    return this.state.answer\r\n      .split(\"\")\r\n      .map((char) => (this.state.guessed.has(char) ? char : \" _ \"));\r\n  }\r\n  generateDifficultyRadios() {\r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Difficulty</FormLabel>\r\n        <RadioGroup row aria-label=\"position\" name=\"position\">\r\n          <FormControlLabel\r\n            control={\r\n              <Radio\r\n                checked={this.state.difficulty === \"Easy\"}\r\n                onChange={this.handleChange}\r\n                value=\"Easy\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Easy\"\r\n            labelPlacement=\"top\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Radio\r\n                checked={this.state.difficulty === \"Medium\"}\r\n                onChange={this.handleChange}\r\n                value=\"Medium\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Medium\"\r\n            labelPlacement=\"top\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Radio\r\n                checked={this.state.difficulty === \"Hard\"}\r\n                onChange={this.handleChange}\r\n                value=\"Hard\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Hard\"\r\n            labelPlacement=\"top\"\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n  generateButtons() {\r\n    return (\r\n      <div className=\"buttonContainer\">\r\n        <div className=\"alphaBox1\">\r\n          {alphabet.slice(0, 13).map((char, key) => (\r\n            <Button\r\n              key={key}\r\n              onClick={() => this.handleClick(char.toUpperCase())}\r\n              disabled={this.state.guessed.has(char.toUpperCase())}\r\n              className=\"buttonGroup\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              {char.toUpperCase()}\r\n            </Button>\r\n          ))}\r\n          <br />\r\n        </div>\r\n        <div className=\"alphaBox2\">\r\n          {alphabet.slice(13, 26).map((char, key) => (\r\n            <Button\r\n              key={key}\r\n              onClick={() => this.handleClick(char.toUpperCase())}\r\n              disabled={this.state.guessed.has(char.toUpperCase())}\r\n              className=\"buttonGroup\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              {char.toUpperCase()}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    //Buttons for game\r\n    let gameKeys = this.generateButtons();\r\n    //Difficulty Radio Buttons\r\n    let difficultSelection = this.generateDifficultyRadios();\r\n    const gameOver = this.state.stage >= this.props.maxWrong;\r\n    //String version of the display answer so we can compare to real answer\r\n    let stringAns = this.guessedWord()\r\n      .join()\r\n      .replace(\",\", \"\")\r\n      .replace(/,/g, \"\");\r\n    const gameWin = stringAns === this.state.answer;\r\n    return (\r\n      <div>\r\n        <img\r\n          className=\"image-box\"\r\n          alt={`hangman_${this.state.stage}`}\r\n          src={\r\n            process.env.PUBLIC_URL +\r\n            `/assets/hangman_step_${this.state.stage}.png`\r\n          }\r\n        ></img>\r\n        <div className=\"hangman-info\">\r\n          {this.state.guessed.size > 0 ? (\r\n            <></>\r\n          ) : (\r\n            <div className=\"radio\">{difficultSelection}</div>\r\n          )}\r\n          <p>{this.state.definition}</p>\r\n          <p>{!gameOver ? this.guessedWord() : this.state.answer}</p>\r\n          {gameWin ? (\r\n            <WinLossModal victory={true} />\r\n          ) : gameOver ? (\r\n            <WinLossModal victory={false} />\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n        {gameKeys}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Hangman;\r\n","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\ImageCard.js",["61","62","63"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"rgba(0,0,0,0.2)\",\r\n    color: \"#fff\",\r\n    margin: \"20px\",\r\n  },\r\n  media: {\r\n    height: 250,\r\n  },\r\n  title: {\r\n    fontFamily: \"Nunito\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"2rem\",\r\n  },\r\n  desc: {\r\n    fontFamily: \"Nunito\",\r\n    fontSize: \"1.1rem\",\r\n    color: \"#ddd\",\r\n  },\r\n});\r\n\r\nexport default function ImageCard({ photo, checked }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Collapse\r\n      in={checked}\r\n      {...(checked ? { timeout: 1000 } : {})}\r\n      collapsedHeight={50}\r\n    >\r\n      <Card className={classes.root}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={photo.imageUrl}\r\n          title={photo.title}\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {photo.title}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.desc}\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            {photo.desc}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Collapse>\r\n  );\r\n}\r\n","C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\Words.js",[],"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\components\\WinLossModal.js",[],"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\static\\alphabet.js",[],"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\static\\imageData.js",[],"C:\\Users\\Kyle\\Desktop\\cs545\\Hangman_Learning_Bio\\hangman-frontend\\src\\hook\\useWindowPosition.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":49,"column":3,"nodeType":"70","endLine":49,"endColumn":12,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":23,"column":9,"nodeType":"70","messageId":"74","endLine":23,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":50,"column":29,"nodeType":"77","messageId":"78","endLine":50,"endColumn":31},{"ruleId":"75","severity":1,"message":"76","line":52,"column":29,"nodeType":"77","messageId":"78","endLine":52,"endColumn":31},{"ruleId":"75","severity":1,"message":"76","line":54,"column":29,"nodeType":"77","messageId":"78","endLine":54,"endColumn":31},{"ruleId":"72","severity":1,"message":"79","line":5,"column":8,"nodeType":"70","messageId":"74","endLine":5,"endColumn":22},{"ruleId":"72","severity":1,"message":"80","line":6,"column":8,"nodeType":"70","messageId":"74","endLine":6,"endColumn":19},{"ruleId":"72","severity":1,"message":"81","line":9,"column":8,"nodeType":"70","messageId":"74","endLine":9,"endColumn":14},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setChecked'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["84"],"no-unused-vars","'diff' is assigned a value but never used.","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Add dependencies array: []",{"range":"87","text":"88"},[1186,1186],", []"]